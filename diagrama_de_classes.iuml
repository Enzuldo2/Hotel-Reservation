@startuml
title Diagrama de Classes Reserva de Hotel

abstract class Person {
    +personId: int 
    +name : str
    +birthday: Date
    +phone: str
    +intolerance: list<str>
}

abstract class User {
    +username: str
    +password: str
    +isSuperUser: bool 
    +isActive: bool 

    +createUser(): int
    +getUser(): User
    +updateUser(): bool
    +deleteUser(): bool

    +createReservation(): int
    +getReservation(): Reservation
    +updateReservation(): bool
    +deleteReservation(): bool
}

class Client {
    +members: list<Member> 

    +makeReservation(): bool

}

class Member {
}

class Admin {
}

class Hotel {
    +name: str
    +address: Address
    +rooms: list<Room>
    +services: list<Service>
    +isFull: bool
    +clients: list<Client>
    +admins: list<Admin>

    +addClient(): bool
    +addAdmin(): bool

    +createRoom(): int
    +getRoom(): Room
    +updateRoom(): bool
    +deleteRoom(): bool
    +getAvailableRoom(): list<Room>

    +createService(): int
    +getService(): Service
    +updateService(): bool
    +deleteService(): bool
    +getAvailableService(): list<Service>
}

class Address {
    +country: str
    +state: str
    +city: str
    +postalCode: str
    +street: str
    +number: int
}

abstract class Room{
    +roomId: int
    +isActive: bool
    +isReserved: bool
    +width: float
    +length: float
    +height: float
    +capacity: int
    +price: float

    +area(): float
    +volume(): float
}

class SingleRoom {
    +description: str
}

class SuiteRoom{
    +description: str
}

class FamilyRoom{
    +description: str
}

class Service {
    +name: str
    +capacity: int 
    +description: str
}

class Reservation {
    +reserveId: int
    +client: Client 
    +checkIn: Date
    +checkOut: Date

    +utilTime(): Date
}

Room <|-- SuiteRoom
Room <|-- SingleRoom
Room <|-- FamilyRoom

Hotel "1" *-- "1..*" Room : have
Hotel "1" *-- "1..*" Service : have
Hotel "1" *-- "1..*" Reservation : have
Hotel "1" o-- "1..*" Admin : have
Hotel "1" o-- "1"    Address : have

Person <|-- User
Person <|-- Member

User <|-- Client
User <|-- Admin

Client "1"-->"0..*" Member : have 
Client "1"-->"1" Reservation: make
Client "1"-->"1" Room: occupies

@enduml
